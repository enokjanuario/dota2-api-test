name: Dota 2 API Test Suite

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Permite execução manual da pipeline

jobs:
  unit-tests:
    name: Run API Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Run Maven Tests
        run: mvn clean test

      - name: Upload TestNG Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: testng-results
          path: target/surefire-reports

      - name: Upload Allure Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: target/allure-results

  performance-tests:
    name: Run K6 Performance Tests
    needs: unit-tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install k6
        run: |
          curl -L https://github.com/grafana/k6/releases/download/v0.43.1/k6-v0.43.1-linux-amd64.tar.gz -o k6.tar.gz
          tar -xzf k6.tar.gz
          sudo cp k6-v0.43.1-linux-amd64/k6 /usr/local/bin

      - name: Create reports directory
        run: mkdir -p target/k6-reports

      - name: Run Heroes Performance Test
        run: k6 run src/test/k6/heroes_performance.js --out json=target/k6-reports/heroes_performance.json

      - name: Wait to avoid rate limiting
        run: sleep 10

      - name: Run Matches Performance Test
        run: k6 run src/test/k6/matches_performance.js --out json=target/k6-reports/matches_performance.json

      - name: Wait to avoid rate limiting
        run: sleep 10

      - name: Run Teams & Players Performance Test
        run: k6 run src/test/k6/teams_players_performance.js --out json=target/k6-reports/teams_players_performance.json

      - name: Upload K6 Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: k6-reports
          path: target/k6-reports

  generate-report:
    name: Generate Allure Report
    needs: unit-tests
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Allure Results
        uses: actions/download-artifact@v3
        with:
          name: allure-results
          path: allure-results

      - name: Generate Allure Report
        uses: simple-elf/allure-report-action@master
        with:
          allure_results: allure-results
          allure_report: allure-report
          allure_history: allure-history

      - name: Deploy report to GitHub Pages
        if: github.event_name == 'push'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./allure-history